#This counter (called n_wrk_drop in Varnish 3) will show the number of requests that have to be dropped because no more threads were available to handle them. This might be difficult to detect this without monitoring it properly. Iâ€™ll start out with the warning threshold at 0, and critical threshold at 5 to get a notification early, but not immediately.
define service{
   service_description    Varnish sess_dropped
   use            	  generic-service
   register       	  0
   host_name	  	  varnish
   check_command  	  check_nrpe_args!check_varnishstat!MAIN.sess_dropped!0!5
}

#This counter (not available in Varnish 3) will count the number of times the child has paniced. The master process will restart the child immediately when it happens, and the cache will be flushed. Depending on the backend load, this may or may not be critical. In any case I d like to know about it.
define service{
   service_description    Varnish child_panic
   use            	  generic-service
   register       	  0
   host_name	  	  varnish
   check_command  	  check_nrpe_args!check_varnishstat!MGT.child_panic!0!2
}

#This counter indicates that the operating system is unable to allocate memory as requested. If this happens, the OOM killer is likely to strike any second.
define service{
   service_description    Varnish Memory allocation
   use            	  generic-service
   register       	  0
   host_name	  	  varnish
   check_command  	  check_nrpe_args!check_varnishstat!SMA.Transient.c_fail!0!0
}
